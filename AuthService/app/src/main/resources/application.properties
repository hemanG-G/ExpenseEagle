#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DB:authservice}?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
#spring.datasource.username=${MYSQL_USER:root}
#spring.datasource.password=${MYSQL_PASSWORD:password}



# kafka&mysql
# host is VM for me so  VM IP





spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:192.168.213.132}:${MYSQL_PORT:3306}/${MYSQL_DB:authservice}?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=PASSWORD
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

# this will automatically create new tables  everytime the application starts -> USE ONCE THEN COMMENT OUT -> ELSE DATA LOSS
#spring.jpa.properties.hibernate.hbm2ddl.auto=update

server.port=9898

logging.level.org.springframework.security=DEBUG
logging.level.your.package.name=DEBUG

# event publisher
spring.kafka.producer.bootstrap-servers= 192.168.213.132:9092
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= authservice.serializer.UserInfoSerializer
spring.kafka.topic-json.name=user_service
spring.kafka.producer.properties.spring.json.type.mapping=auth:authservice.model.UserInfoEvent



